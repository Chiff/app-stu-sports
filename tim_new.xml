<?xml version="1.0" encoding="UTF-8"?>
<document xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="https://modeler.netgrif.com/petriflow_schema.xsd">
	<id>tim</id>
	<initials>TEAM</initials>
	<title>team</title>
	<defaultRole>true</defaultRole>
	<transitionRole>false</transitionRole>
	<!-- TRANSACTIONS -->
	<!-- ROLES -->
	<!-- DATA -->
	<data type="text">
		<id>text_0</id>
		<title>Dovod rozpustenia</title>
		<placeholder>placeholder</placeholder>
		<desc>description</desc>
		<values>area</values>
		<init>value</init>
	</data>
	<data type="dateTime">
		<id>dateTime_0</id>
		<title>set label</title>
		<placeholder>placeholder</placeholder>
		<desc>description</desc>
	</data>
	<data type="taskRef">
		<id>taskRef_podujatie_prihlas</id>
		<title>set label</title>
		<placeholder>placeholder</placeholder>
		<desc>description</desc>
		<init>value</init>
	</data>
	<data type="taskRef">
		<id>taskRef_clenovia</id>
		<title>clenovia timu</title>
		<placeholder>clenovia timu</placeholder>
		<desc>clenovia timu</desc>
		<init>ziadny clen</init>
	</data>
	<data type="text">
		<id>nazov_timu</id>
		<title>Nazov timu</title>
		<init>value</init>
	</data>
	<data type="enumeration_map">
		<id>enum_osoby</id>
		<title>Vyber clenov timu</title>
	</data>
	<!-- I18NS -->
	<!-- TRANSITIONS -->
	<transition>
		<id>1</id>
		<x>460</x>
		<y>340</y>
		<layout>
			<offset>0</offset>
		</layout>
		<label>Vytvorit tim</label>
		<icon>control_point</icon>
		<dataGroup>
			<id>DataGroup_0</id>
			<layout>grid</layout>
			<dataRef>
				<id>nazov_timu</id>
				<logic>
					<behavior>editable</behavior>
					<behavior>required</behavior>
				</logic>
				<layout>
					<x>0</x>
					<y>0</y>
					<rows>1</rows>
					<cols>4</cols>
					<offset>0</offset>
					<template>material</template>
					<appearance>outline</appearance>
				</layout>
			</dataRef>
			<dataRef>
				<id>taskRef_clenovia</id>
				<logic>
					<behavior>editable</behavior>
					<behavior>required</behavior>
				</logic>
				<layout>
					<x>0</x>
					<y>1</y>
					<rows>2</rows>
					<cols>4</cols>
					<offset>0</offset>
					<template>material</template>
					<appearance>outline</appearance>
				</layout>
			</dataRef>
			<dataRef>
				<id>enum_osoby</id>
				<logic>
					<behavior>editable</behavior>
					<action trigger="set">
						<!-- task "info o osobe" sa prida do taskrefov-->
						clenovia_ref: f.taskRef_clenovia,
						clenovia_map: f.enum_osoby;

						<!-- zober caseId zvolenej osoby z mapy-->
						def vybrana_osoba = clenovia_map.value
						<!-- najdi task "info o osobe" -->
						def taskInfo = findTask( { it.caseId.eq(vybrana_osoba).and(it.transitionId.eq("7")) } )

						<!-- ak je taskref prazny, inicializuj ho prazdnou hodnotou
						 	 ak uz obsahuje dany task, nepridavaj ho -->
						if(clenovia_ref.value != null) {
							if( !(clenovia_ref.value.contains(taskInfo.stringId)) ) {
								clenovia_ref.value.add(taskInfo.stringId)
								change clenovia_ref value {
									return clenovia_ref.value
								}
							}
						}
						else {
							change clenovia_ref value {
								return []
							}
						}
					</action>
				</logic>
				<layout>
					<x>0</x>
					<y>2</y>
					<rows>2</rows>
					<cols>4</cols>
					<offset>0</offset>
					<template>material</template>
					<appearance>outline</appearance>
				</layout>
			</dataRef>
		</dataGroup>
		<event type="assign">
			<id>4211_assign</id>
			<actions phase="post">
				<action>

					clenovia_ref: f.taskRef_clenovia,
					clenovia_map: f.enum_osoby;

					def map = [:]

					def cases = findCases ({ it.processIdentifier.contains("clen_osoba") });
						cases.each {

							def caseid = it.stringId
							def osoba_zobrazit_udaje_task = findTask( { it.caseId.eq(caseid).and(it.transitionId.eq("7")) });
							def meno_osoby = getData(osoba_zobrazit_udaje_task).get('name').value;
							def priezvisko_osoby = getData(osoba_zobrazit_udaje_task).get('surname').value;
							def email_osoby = getData(osoba_zobrazit_udaje_task).get('mail').value;
							map[caseid] = meno_osoby + " " + priezvisko_osoby + " --> " + email_osoby

							}
					change clenovia_map options {
						return map
					}

				</action>
			</actions>
		</event>
	</transition>
	<transition>
		<id>5</id>
		<x>580</x>
		<y>180</y>
		<layout>
			<offset>0</offset>
		</layout>
		<label>Pridat clenov</label>
		<icon>event</icon>
		<dataRef>
			<id>taskRef_clenovia</id>
			<logic>
				<behavior>editable</behavior>
				<behavior>required</behavior>
			</logic>
			<layout>
				<x>0</x>
				<y>1</y>
				<rows>2</rows>
				<cols>4</cols>
				<offset>0</offset>
				<template>material</template>
				<appearance>outline</appearance>
			</layout>
		</dataRef>
		<dataRef>
			<id>enum_osoby</id>
			<logic>
				<behavior>editable</behavior>
				<action trigger="set">
					<!-- task "info o osobe" sa prida do taskrefov-->
					clenovia_ref: f.taskRef_clenovia,
					clenovia_map: f.enum_osoby;

					<!-- zober caseId zvolenej osoby z mapy-->
					def vybrana_osoba = clenovia_map.value
					<!-- najdi task "info o osobe" -->
					def taskInfo = findTask( { it.caseId.eq(vybrana_osoba).and(it.transitionId.eq("7")) } )

					<!-- ak je taskref prazny, inicializuj ho prazdnou hodnotou
                          ak uz obsahuje dany task, nepridavaj ho -->
					if(clenovia_ref.value != null) {
					if( !(clenovia_ref.value.contains(taskInfo.stringId)) ) {
					clenovia_ref.value.add(taskInfo.stringId)
					change clenovia_ref value {
					return clenovia_ref.value
					}
					}
					}
					else {
					change clenovia_ref value {
					return []
					}
					}
				</action>
			</logic>
			<layout>
				<x>0</x>
				<y>2</y>
				<rows>2</rows>
				<cols>4</cols>
				<offset>0</offset>
				<template>material</template>
				<appearance>outline</appearance>
			</layout>
		</dataRef>
		<event type="assign">
			<id>4211_assign</id>
			<actions phase="post">
				<action>

					clenovia_ref: f.taskRef_clenovia,
					clenovia_map: f.enum_osoby;

					def map = [:]

					def cases = findCases ({ it.processIdentifier.contains("clen_osoba") });
					cases.each {

					def caseid = it.stringId
					def osoba_zobrazit_udaje_task = findTask( { it.caseId.eq(caseid).and(it.transitionId.eq("7")) });
					def meno_osoby = getData(osoba_zobrazit_udaje_task).get('name').value;
					def priezvisko_osoby = getData(osoba_zobrazit_udaje_task).get('surname').value;
					def email_osoby = getData(osoba_zobrazit_udaje_task).get('mail').value;
					map[caseid] = meno_osoby + " " + priezvisko_osoby + " --> " + email_osoby

					}
					change clenovia_map options {
					return map
					}

				</action>
			</actions>
		</event>
	</transition>
	<transition>
		<id>6</id>
		<x>580</x>
		<y>500</y>
		<layout>
			<offset>0</offset>
		</layout>
		<label>Editovat</label>
		<icon>edit</icon>
		<dataGroup>
			<id>DataGroup_0</id>
			<layout>grid</layout>
			<dataRef>
				<id>nazov_timu</id>
				<logic>
					<behavior>editable</behavior>
					<behavior>required</behavior>
				</logic>
				<layout>
					<x>0</x>
					<y>0</y>
					<rows>1</rows>
					<cols>4</cols>
					<offset>0</offset>
					<template>material</template>
					<appearance>outline</appearance>
				</layout>
			</dataRef>
			<dataRef>
				<id>taskRef_clenovia</id>
				<logic>
					<behavior>editable</behavior>
					<behavior>required</behavior>
				</logic>
				<layout>
					<x>0</x>
					<y>1</y>
					<rows>1</rows>
					<cols>4</cols>
					<offset>0</offset>
					<template>material</template>
					<appearance>outline</appearance>
				</layout>
			</dataRef>
		</dataGroup>
	</transition>
	<transition>
		<id>7</id>
		<x>740</x>
		<y>340</y>
		<layout>
			<offset>0</offset>
		</layout>
		<label>Rozpustit</label>
		<icon>cancel</icon>
		<dataGroup>
			<id>DataGroup_0</id>
			<dataRef>
				<id>text_0</id>
				<logic>
					<behavior>editable</behavior>
				</logic>
				<layout>
					<x>0</x>
					<y>0</y>
					<rows>1</rows>
					<cols>4</cols>
					<offset>0</offset>
					<template>material</template>
					<appearance>outline</appearance>
				</layout>
			</dataRef>
			<dataRef>
				<id>dateTime_0</id>
				<logic>
					<behavior>editable</behavior>
				</logic>
				<layout>
					<x>0</x>
					<y>1</y>
					<rows>1</rows>
					<cols>4</cols>
					<offset>0</offset>
					<template>material</template>
					<appearance>outline</appearance>
				</layout>
			</dataRef>
		</dataGroup>
	</transition>
	<transition>
		<id>16</id>
		<x>460</x>
		<y>500</y>
		<dataGroup>
			<id>DataGroup_0</id>
			<layout>grid</layout>
			<dataRef>
				<id>nazov_timu</id>
				<logic>
					<behavior>visible</behavior>
				</logic>
				<layout>
					<x>0</x>
					<y>0</y>
					<rows>1</rows>
					<cols>4</cols>
					<offset>0</offset>
					<template>material</template>
					<appearance>outline</appearance>
				</layout>
			</dataRef>f
			<dataRef>
				<id>taskRef_clenovia</id>
				<logic>
					<behavior>editable</behavior>
					<behavior>required</behavior>
				</logic>
				<layout>
					<x>0</x>
					<y>1</y>
					<rows>2</rows>
					<cols>4</cols>
					<offset>0</offset>
					<template>material</template>
					<appearance>outline</appearance>
				</layout>
			</dataRef>
		</dataGroup>
		<label>info o time</label>
		<icon>info</icon>
	</transition>
	<!-- PLACES -->
	<place>
		<id>2</id>
		<x>300</x>
		<y>340</y>
		<label></label>
		<tokens>1</tokens>
		<static>false</static>
	</place>
	<place>
		<id>3</id>
		<x>580</x>
		<y>340</y>
		<label></label>
		<tokens>0</tokens>
		<static>false</static>
	</place>
	<place>
		<id>8</id>
		<x>900</x>
		<y>340</y>
		<label></label>
		<tokens>0</tokens>
		<static>false</static>
	</place>
	<!-- ARCS -->
	<arc>
		<id>4</id>
		<type>regular</type>
		<sourceId>2</sourceId>
		<destinationId>1</destinationId>
		<multiplicity>1</multiplicity>
	</arc>
	<arc>
		<id>9</id>
		<type>regular</type>
		<sourceId>1</sourceId>
		<destinationId>3</destinationId>
		<multiplicity>1</multiplicity>
	</arc>
	<arc>
		<id>12</id>
		<type>regular</type>
		<sourceId>3</sourceId>
		<destinationId>7</destinationId>
		<multiplicity>1</multiplicity>
	</arc>
	<arc>
		<id>13</id>
		<type>regular</type>
		<sourceId>7</sourceId>
		<destinationId>8</destinationId>
		<multiplicity>1</multiplicity>
	</arc>
	<arc>
		<id>17</id>
		<type>read</type>
		<sourceId>3</sourceId>
		<destinationId>5</destinationId>
		<multiplicity>1</multiplicity>
	</arc>
	<arc>
		<id>18</id>
		<type>read</type>
		<sourceId>3</sourceId>
		<destinationId>6</destinationId>
		<multiplicity>1</multiplicity>
	</arc>
	<arc>
		<id>19</id>
		<type>read</type>
		<sourceId>3</sourceId>
		<destinationId>16</destinationId>
		<multiplicity>1</multiplicity>
	</arc>
</document>

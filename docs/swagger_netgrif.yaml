swagger: '2.0'
info:
  description: Web services used in every Masus application engine project.
  version: 5.0.0-SNAPSHOT
  title: MASUS Application Engine
  contact:
    name: 'MASUS'
    url: 'https://uim.fei.stuba.sk/predmet/i-msus/'
host: 'https://engine.interes.group'
basePath: /api
tags:
  - name: Admin console
    description: Administrator console
  - name: Authentication
    description: User authentication services
  - name: Dashboard
    description: Dashboard content services
  - name: Elasticsearch
    description: Elasticsearch management services
  - name: Filter
    description: Persisted filters services
  - name: Group
    description: Group management services
  - name: Petri net
    description: Petri net management services
  - name: Task
    description: Tasks management services
  - name: User
    description: User management services
  - name: Workflow
    description: Workflow and net's cases management services
schemes:
  - http
  - https
paths:
  /api/admin/run:
    post:
      tags:
        - Admin console
      summary: Remote code execution
      description: >-
        Caller must have the SYSTEMADMIN role and the call must be made from the
        server or one of the whiteli sted IP addresses (configurable in
        properties file).



        The provided code is executed within the same context as the process
        actions. The code has thus access to all the autowired services, that
        are available when writing Petriflow actions.
      operationId: adminCodeUsingPOST
      consumes:
        - text/plain
      produces:
        - application/hal+json
      parameters:
        - in: body
          name: code
          description: code
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/MessageResource'
        '403':
          description: Caller doesn't fulfill the authorisation requirements
        '500':
          description: Error
          schema:
            $ref: '#/definitions/MessageResource'
      security:
        - BasicAuth: []
  /api/auth/changePassword:
    post:
      tags:
        - Authentication
      summary: Set a new password
      operationId: changePasswordUsingPOST
      consumes:
        - application/json;charset=UTF-8
      produces:
        - application/hal+json
      parameters:
        - in: body
          name: request
          description: request
          required: true
          schema:
            $ref: '#/definitions/ChangePasswordRequest'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/MessageResource'
      security:
        - BasicAuth: []
  /api/auth/invite:
    post:
      tags:
        - Authentication
      summary: Send invitation to a new user
      operationId: inviteUsingPOST
      consumes:
        - application/json;charset=UTF-8
      produces:
        - application/hal+json
      parameters:
        - in: body
          name: newUserRequest
          description: newUserRequest
          required: true
          schema:
            $ref: '#/definitions/NewUserRequest'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/MessageResource'
      security:
        - BasicAuth: []
  /api/auth/login:
    get:
      tags:
        - Authentication
      summary: Login to the system
      operationId: loginUsingGET
      produces:
        - application/hal+json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/UserResource'
      security:
        - BasicAuth: []
  /api/auth/recover:
    post:
      tags:
        - Authentication
      summary: Account recovery
      operationId: recoverAccountUsingPOST
      consumes:
        - application/json;charset=UTF-8
      produces:
        - application/hal+json
      parameters:
        - in: body
          name: request
          description: request
          required: true
          schema:
            $ref: '#/definitions/RegistrationRequest'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/MessageResource'
  /api/auth/reset:
    post:
      tags:
        - Authentication
      summary: Reset password
      operationId: resetPasswordUsingPOST
      consumes:
        - text/plain
      produces:
        - application/hal+json
      parameters:
        - in: body
          name: recoveryEmail
          description: recoveryEmail
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/MessageResource'
  /api/auth/signup:
    post:
      tags:
        - Authentication
      summary: New user registration
      operationId: signupUsingPOST
      consumes:
        - application/json;charset=UTF-8
      produces:
        - application/hal+json
      parameters:
        - in: body
          name: regRequest
          description: regRequest
          required: true
          schema:
            $ref: '#/definitions/RegistrationRequest'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/MessageResource'
  /api/auth/token/verify:
    post:
      tags:
        - Authentication
      summary: Verify validity of a registration token
      operationId: verifyTokenUsingPOST
      consumes:
        - text/plain
      produces:
        - application/hal+json
      parameters:
        - in: body
          name: token
          description: token
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/MessageResource'
      security:
        - BasicAuth: []
  /api/auth/verify:
    get:
      tags:
        - Authentication
      summary: Verify validity of an authentication token
      operationId: verifyAuthTokenUsingGET
      produces:
        - application/hal+json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/MessageResource'
  /api/dashboard/search:
    post:
      tags:
        - Dashboard
      summary: Execute Elasticsearch aggregation
      description: The provided aggregation is executed and its result is returned
      operationId: getAggregationByQueryUsingPOST
      consumes:
        - application/json;charset=UTF-8
      produces:
        - application/json;charset=UTF-8
      parameters:
        - in: body
          name: query
          description: query
          required: true
          schema:
            type: string
        - name: type
          in: query
          description: type
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: string
      security:
        - BasicAuth: []
  /api/elastic/reindex:
    post:
      tags:
        - Elasticsearch
      summary: Reindex specified cases
      description: Caller must have the ADMIN role
      operationId: reindexUsingPOST
      consumes:
        - application/json;charset=UTF-8
      produces:
        - application/hal+json
      parameters:
        - in: body
          name: searchBody
          description: searchBody
          required: true
          schema:
            type: object
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/MessageResource'
        '403':
          description: Caller doesn't fulfill the authorisation requirements
      security:
        - BasicAuth: []
  /api/filter:
    post:
      tags:
        - Filter
      summary: Save new filter
      operationId: createFilterUsingPOST
      consumes:
        - application/json;charset=UTF-8
      produces:
        - application/hal+json
      parameters:
        - in: body
          name: newFilter
          description: newFilter
          required: true
          schema:
            $ref: '#/definitions/CreateFilterBody'
        - name: operation
          in: query
          description: operation
          required: false
          type: string
          enum:
            - AND
            - OR
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/MessageResource'
      security:
        - BasicAuth: []
  /api/filter/search:
    post:
      tags:
        - Filter
      summary: Search for filter by provided criteria
      operationId: searchUsingPOST
      consumes:
        - application/json;charset=UTF-8
      produces:
        - application/hal+json
      parameters:
        - in: body
          name: searchCriteria
          description: searchCriteria
          required: true
          schema:
            type: object
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/LocalisedFilterResource'
      security:
        - BasicAuth: []
  '/api/filter/{id}':
    delete:
      tags:
        - Filter
      summary: Delete filter specified by id
      operationId: deleteFilterUsingDELETE
      produces:
        - application/hal+json
      parameters:
        - name: id
          in: path
          description: id
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/MessageResource'
      security:
        - BasicAuth: []
  /api/group/all:
    get:
      tags:
        - Group
      summary: Get all groups in the system
      description: Caller must have the ADMIN role
      operationId: getAllGroupsUsingGET
      produces:
        - application/hal+json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/GroupsResource'
        '403':
          description: Caller doesn't fulfill the authorisation requirements
      security:
        - BasicAuth: []
  /api/group/my:
    get:
      tags:
        - Group
      summary: Get all the user's groups
      operationId: getGroupsOfUserUsingGET
      produces:
        - application/hal+json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/GroupsResource'
      security:
        - BasicAuth: []
  /api/petrinet:
    get:
      tags:
        - Petri net
      summary: Get all processes
      operationId: getAllUsingGET
      produces:
        - application/hal+json
      parameters:
        - name: indentifier
          in: query
          description: indentifier
          required: false
          type: string
        - name: version
          in: query
          description: version
          required: false
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/PetriNetReferenceResources'
      security:
        - BasicAuth: []
  /api/petrinet/data:
    post:
      tags:
        - Petri net
      summary: Get data fields of transitions
      operationId: getDataFieldReferencesUsingPOST
      consumes:
        - application/json;charset=UTF-8
      produces:
        - application/hal+json
      parameters:
        - in: body
          name: referenceBody
          description: referenceBody
          required: true
          schema:
            $ref: '#/definitions/TransitionReference'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/DataFieldReferencesResource'
      security:
        - BasicAuth: []
  /api/petrinet/import:
    post:
      tags:
        - Petri net
      summary: Import new process
      description: >-
        Caller must have the ADMIN role. Imports an entirely new process or a
        new version of an existing process.
      operationId: importPetriNetUsingPOST
      consumes:
        - multipart/form-data
      produces:
        - application/hal+json
      parameters:
        - name: file
          in: formData
          description: file
          required: true
          type: file
        - name: meta
          in: query
          description: meta
          required: false
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/PetriNetReferenceWithMessageResource'
        '400':
          description: Process model is invalid
          schema:
            $ref: '#/definitions/MessageResource'
        '403':
          description: Caller doesn't fulfill the authorisation requirements
      security:
        - BasicAuth: []
  /api/petrinet/search:
    post:
      tags:
        - Petri net
      summary: Search processes
      operationId: searchPetriNetsUsingPOST
      consumes:
        - application/json;charset=UTF-8
      produces:
        - application/hal+json
      parameters:
        - in: body
          name: criteria
          description: criteria
          required: true
          schema:
            type: object
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/PetriNetReferenceResource'
      security:
        - BasicAuth: []
  /api/petrinet/transitions:
    get:
      tags:
        - Petri net
      summary: Get transitions of processes
      operationId: getTransitionReferencesUsingGET
      produces:
        - application/hal+json
      parameters:
        - name: ids
          in: query
          description: ids
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/TransitionReferencesResource'
      security:
        - BasicAuth: []
  '/api/petrinet/{identifier}/{version}':
    get:
      tags:
        - Petri net
      summary: Get process by identifier and version
      operationId: getOneUsingGET
      produces:
        - application/hal+json
      parameters:
        - name: identifier
          in: path
          description: identifier
          required: true
          type: string
        - name: version
          in: path
          description: version
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/PetriNetReferenceResource'
      security:
        - BasicAuth: []
  '/api/petrinet/{id}':
    get:
      tags:
        - Petri net
      summary: Get process by id
      operationId: getOneUsingGET_1
      produces:
        - application/hal+json
      parameters:
        - name: id
          in: path
          description: id
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/PetriNetReferenceResource'
      security:
        - BasicAuth: []
    delete:
      tags:
        - Petri net
      summary: Delete process
      description: >-
        Caller must have the ADMIN role. Removes the specified process, along
        with it's cases, tasks and process roles.
      operationId: deletePetriNetUsingDELETE
      produces:
        - application/hal+json
      parameters:
        - name: id
          in: path
          description: id
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/MessageResource'
        '403':
          description: Caller doesn't fulfill the authorisation requirements
      security:
        - BasicAuth: []
  '/api/petrinet/{netId}/file':
    get:
      tags:
        - Petri net
      summary: Download process model
      operationId: getNetFileUsingGET
      produces:
        - application/octet-stream
      parameters:
        - name: netId
          in: path
          description: netId
          required: true
          type: string
        - name: title
          in: query
          description: title
          required: false
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: file
      security:
        - BasicAuth: []
  '/api/petrinet/{netId}/roles':
    get:
      tags:
        - Petri net
      summary: Get roles of process
      operationId: getRolesUsingGET
      produces:
        - application/hal+json
      parameters:
        - name: netId
          in: path
          description: netId
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ProcessRolesResource'
      security:
        - BasicAuth: []
  '/api/petrinet/{netId}/transactions':
    get:
      tags:
        - Petri net
      summary: Get transactions of process
      operationId: getTransactionsUsingGET
      produces:
        - application/hal+json
      parameters:
        - name: netId
          in: path
          description: netId
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/TransactionsResource'
      security:
        - BasicAuth: []
  /api/task:
    get:
      tags:
        - Task
      summary: Get all tasks
      operationId: getAllUsingGET_1
      produces:
        - application/hal+json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/LocalisedTaskResource'
      security:
        - BasicAuth: []
  '/api/task/assign/{id}':
    get:
      tags:
        - Task
      summary: Assign task
      description: 'Caller must be able to perform the task, or must be an ADMIN'
      operationId: assignUsingGET
      produces:
        - application/hal+json
      parameters:
        - name: id
          in: path
          description: id
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/LocalisedEventOutcomeResource'
        '403':
          description: Caller doesn't fulfill the authorisation requirements
      security:
        - BasicAuth: []
  '/api/task/cancel/{id}':
    get:
      tags:
        - Task
      summary: Cancel task
      description: 'Caller must be assigned to the task, or must be an ADMIN'
      operationId: cancelUsingGET
      produces:
        - application/hal+json
      parameters:
        - name: id
          in: path
          description: id
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/LocalisedEventOutcomeResource'
        '403':
          description: Caller doesn't fulfill the authorisation requirements
      security:
        - BasicAuth: []
  /api/task/case:
    post:
      tags:
        - Task
      summary: Get all tasks by cases
      operationId: getAllByCasesUsingPOST
      consumes:
        - application/json;charset=UTF-8
      produces:
        - application/hal+json
      parameters:
        - in: body
          name: cases
          description: cases
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/LocalisedTaskResource'
      security:
        - BasicAuth: []
  '/api/task/case/{id}':
    get:
      tags:
        - Task
      summary: Get tasks of the case
      operationId: getTasksOfCaseUsingGET
      produces:
        - application/json;charset=UTF-8
      parameters:
        - name: id
          in: path
          description: id
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/TaskReference'
      security:
        - BasicAuth: []
  /api/task/count:
    post:
      tags:
        - Task
      summary: Count tasks by provided criteria
      operationId: countUsingPOST
      consumes:
        - application/json;charset=UTF-8
      produces:
        - application/json;charset=UTF-8
      parameters:
        - in: body
          name: query
          description: query
          required: true
          schema:
            $ref: '#/definitions/SingleElasticTaskSearchRequestAsList'
        - name: operation
          in: query
          description: operation
          required: false
          type: string
          default: OR
          enum:
            - AND
            - OR
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/CountResponse'
      security:
        - BasicAuth: []
  '/api/task/delegate/{id}':
    post:
      tags:
        - Task
      summary: Delegate task
      description: 'Caller must be able to delegate the task, or must be an ADMIN'
      operationId: delegateUsingPOST
      consumes:
        - text/plain
      produces:
        - application/hal+json
      parameters:
        - name: id
          in: path
          description: id
          required: true
          type: string
        - in: body
          name: delegatedId
          description: delegatedId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/LocalisedEventOutcomeResource'
        '403':
          description: Caller doesn't fulfill the authorisation requirements
      security:
        - BasicAuth: []
  '/api/task/finish/{id}':
    get:
      tags:
        - Task
      summary: Finish task
      description: 'Caller must be assigned to the task, or must be an ADMIN'
      operationId: finishUsingGET
      produces:
        - application/hal+json
      parameters:
        - name: id
          in: path
          description: id
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/LocalisedEventOutcomeResource'
        '403':
          description: Caller doesn't fulfill the authorisation requirements
      security:
        - BasicAuth: []
  /api/task/my:
    get:
      tags:
        - Task
      summary: Get all tasks assigned to logged user
      operationId: getMyUsingGET
      produces:
        - application/hal+json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/LocalisedTaskResource'
      security:
        - BasicAuth: []
  /api/task/my/finished:
    get:
      tags:
        - Task
      summary: Get all finished tasks by logged user
      operationId: getMyFinishedUsingGET
      produces:
        - application/hal+json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/LocalisedTaskResource'
      security:
        - BasicAuth: []
  /api/task/search:
    post:
      tags:
        - Task
      summary: Generic task search on Mongo database
      operationId: searchUsingPOST_1
      consumes:
        - application/json;charset=UTF-8
      produces:
        - application/hal+json
      parameters:
        - in: body
          name: searchBody
          description: searchBody
          required: true
          schema:
            $ref: '#/definitions/SingleTaskSearchRequestAsList'
        - name: operation
          in: query
          description: operation
          required: false
          type: string
          default: OR
          enum:
            - AND
            - OR
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/LocalisedTaskResource'
      security:
        - BasicAuth: []
  /api/task/search_es:
    post:
      tags:
        - Task
      summary: Generic task search on Elasticsearch database
      operationId: searchElasticUsingPOST
      consumes:
        - application/json;charset=UTF-8
      produces:
        - application/hal+json
      parameters:
        - in: body
          name: searchBody
          description: searchBody
          required: true
          schema:
            $ref: '#/definitions/SingleElasticTaskSearchRequestAsList'
        - name: operation
          in: query
          description: operation
          required: false
          type: string
          default: OR
          enum:
            - AND
            - OR
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/LocalisedTaskResource'
      security:
        - BasicAuth: []
  '/api/task/{id}':
    get:
      tags:
        - Task
      summary: Get task by id
      operationId: getOneUsingGET_2
      produces:
        - application/hal+json
      parameters:
        - name: id
          in: path
          description: id
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/LocalisedTaskResource'
      security:
        - BasicAuth: []
  '/api/task/{id}/data':
    get:
      tags:
        - Task
      summary: Get all task data
      operationId: getDataUsingGET
      produces:
        - application/hal+json
      parameters:
        - name: id
          in: path
          description: id
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/DataGroupsResource'
      security:
        - BasicAuth: []
    post:
      tags:
        - Task
      summary: Set task data
      description: 'Caller must be assigned to the task, or must be an ADMIN'
      operationId: setDataUsingPOST
      consumes:
        - application/json;charset=UTF-8
      produces:
        - application/json;charset=UTF-8
      parameters:
        - name: id
          in: path
          description: id
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ChangedFieldContainer'
        '403':
          description: Caller doesn't fulfill the authorisation requirements
      security:
        - BasicAuth: []
  '/api/task/{id}/file/{field}':
    get:
      tags:
        - Task
      summary: Download task file field value
      operationId: getFileUsingGET
      produces:
        - application/octet-stream
      parameters:
        - name: id
          in: path
          description: id
          required: true
          type: string
        - name: field
          in: path
          description: field
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Resource'
      security:
        - BasicAuth: []
    post:
      tags:
        - Task
      summary: Upload file into the task
      description: 'Caller must be assigned to the task, or must be an ADMIN'
      operationId: saveFileUsingPOST
      consumes:
        - multipart/form-data
      produces:
        - application/hal+json
      parameters:
        - name: id
          in: path
          description: id
          required: true
          type: string
        - name: field
          in: path
          description: field
          required: true
          type: string
        - name: file
          in: formData
          description: file
          required: true
          type: file
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ChangedFieldByFileFieldContainer'
        '403':
          description: Caller doesn't fulfill the authorisation requirements
      security:
        - BasicAuth: []
    delete:
      tags:
        - Task
      summary: Remove file from the task
      description: 'Caller must be assigned to the task, or must be an ADMIN'
      operationId: deleteFileUsingDELETE
      produces:
        - application/hal+json
      parameters:
        - name: id
          in: path
          description: id
          required: true
          type: string
        - name: field
          in: path
          description: field
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/MessageResource'
        '403':
          description: Caller doesn't fulfill the authorisation requirements
      security:
        - BasicAuth: []
  '/api/task/{id}/file/{field}/{name}':
    get:
      tags:
        - Task
      summary: Download one file from tasks file list field value
      operationId: getNamedFileUsingGET
      produces:
        - application/octet-stream
      parameters:
        - name: id
          in: path
          description: id
          required: true
          type: string
        - name: field
          in: path
          description: field
          required: true
          type: string
        - name: name
          in: path
          description: name
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Resource'
      security:
        - BasicAuth: []
    delete:
      tags:
        - Task
      summary: Remove file from tasks file list field value
      description: 'Caller must be assigned to the task, or must be an ADMIN'
      operationId: deleteNamedFileUsingDELETE
      produces:
        - application/hal+json
      parameters:
        - name: id
          in: path
          description: id
          required: true
          type: string
        - name: field
          in: path
          description: field
          required: true
          type: string
        - name: name
          in: path
          description: name
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/MessageResource'
        '403':
          description: Caller doesn't fulfill the authorisation requirements
      security:
        - BasicAuth: []
  '/api/task/{id}/file_preview/{field}':
    get:
      tags:
        - Task
      summary: Download preview for file field value
      operationId: getFilePreviewUsingGET
      produces:
        - application/octet-stream
      parameters:
        - name: id
          in: path
          description: id
          required: true
          type: string
        - name: field
          in: path
          description: field
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Resource'
      security:
        - BasicAuth: []
  '/api/task/{id}/files/{field}':
    post:
      tags:
        - Task
      summary: Upload multiple files into the task
      description: 'Caller must be assigned to the task, or must be an ADMIN'
      operationId: saveFilesUsingPOST
      consumes:
        - application/json
      produces:
        - application/hal+json
      parameters:
        - name: id
          in: path
          description: id
          required: true
          type: string
        - name: field
          in: path
          description: field
          required: true
          type: string
        - name: files
          in: formData
          description: files
          required: true
          type: array
          items:
            type: file
          collectionFormat: multi
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ChangedFieldByFileFieldContainer'
        '403':
          description: Caller doesn't fulfill the authorisation requirements
      security:
        - BasicAuth: []
  /api/user:
    get:
      tags:
        - User
      summary: Get all users
      operationId: getAllUsingGET_2
      produces:
        - application/hal+json
      parameters:
        - name: small
          in: query
          description: small
          required: false
          type: boolean
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/UserResource'
      security:
        - BasicAuth: []
  /api/user/authority:
    get:
      tags:
        - User
      summary: Get all authorities of the system
      description: Caller must have the ADMIN role
      operationId: getAllAuthoritiesUsingGET
      produces:
        - application/hal+json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/MessageResource'
        '403':
          description: Caller doesn't fulfill the authorisation requirements
      security:
        - BasicAuth: []
  /api/user/me:
    get:
      tags:
        - User
      summary: Get logged user
      operationId: getLoggedUserUsingGET
      produces:
        - application/hal+json
      parameters:
        - name: small
          in: query
          description: small
          required: false
          type: boolean
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/UserResource'
      security:
        - BasicAuth: []
  /api/user/preferences:
    get:
      tags:
        - User
      summary: Get user's preferences
      operationId: preferencesUsingGET
      produces:
        - application/hal+json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/PreferencesResource'
      security:
        - BasicAuth: []
    post:
      tags:
        - User
      summary: Set user's preferences
      operationId: savePreferencesUsingPOST
      consumes:
        - application/json;charset=UTF-8
      produces:
        - application/hal+json
      parameters:
        - in: body
          name: preferences
          description: preferences
          required: true
          schema:
            $ref: '#/definitions/Preferences'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/MessageResource'
      security:
        - BasicAuth: []
  /api/user/role:
    post:
      tags:
        - User
      summary: Get all users with specified roles
      operationId: getAllWithRoleUsingPOST
      consumes:
        - application/json;charset=UTF-8
      produces:
        - application/hal+json
      parameters:
        - in: body
          name: roleIds
          description: roleIds
          required: true
          schema:
            type: array
            items:
              type: string
        - name: small
          in: query
          description: small
          required: false
          type: boolean
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/UserResource'
      security:
        - BasicAuth: []
  /api/user/search:
    post:
      tags:
        - User
      summary: Generic user search
      operationId: searchUsingPOST_2
      consumes:
        - application/json;charset=UTF-8
      produces:
        - application/hal+json
      parameters:
        - name: small
          in: query
          description: small
          required: false
          type: boolean
        - in: body
          name: query
          description: query
          required: true
          schema:
            $ref: '#/definitions/UserSearchRequestBody'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/UserResource'
      security:
        - BasicAuth: []
  '/api/user/{id}':
    get:
      tags:
        - User
      summary: Get user by id
      operationId: getUserUsingGET
      produces:
        - application/hal+json
      parameters:
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int64
        - name: small
          in: query
          description: small
          required: false
          type: boolean
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/UserResource'
      security:
        - BasicAuth: []
    post:
      tags:
        - User
      summary: Update user
      operationId: updateUserUsingPOST
      consumes:
        - application/json;charset=UTF-8
      produces:
        - application/hal+json
      parameters:
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int64
        - in: body
          name: updates
          description: updates
          required: true
          schema:
            $ref: '#/definitions/UpdateUserRequest'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/UserResource'
      security:
        - BasicAuth: []
  '/api/user/{id}/authority/assign':
    post:
      tags:
        - User
      summary: Assign authority to the user
      description: Caller must have the ADMIN role
      operationId: assignAuthorityToUserUsingPOST
      consumes:
        - text/plain
      produces:
        - application/hal+json
      parameters:
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int64
        - in: body
          name: authorityId
          description: authorityId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/MessageResource'
        '403':
          description: Caller doesn't fulfill the authorisation requirements
      security:
        - BasicAuth: []
  '/api/user/{id}/role/assign':
    post:
      tags:
        - User
      summary: Assign role to the user
      description: Caller must have the ADMIN role
      operationId: assignRolesToUserUsingPOST
      consumes:
        - application/json;charset=UTF-8
      produces:
        - application/hal+json
      parameters:
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int64
        - in: body
          name: roleIds
          description: roleIds
          required: true
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/MessageResource'
        '403':
          description: Caller doesn't fulfill the authorisation requirements
      security:
        - BasicAuth: []
  /api/workflow/all:
    get:
      tags:
        - Workflow
      summary: Get all cases of the system
      operationId: getAllUsingGET_3
      produces:
        - application/hal+json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/CaseResource'
      security:
        - BasicAuth: []
  /api/workflow/case:
    post:
      tags:
        - Workflow
      summary: Create new case
      operationId: createCaseUsingPOST
      consumes:
        - application/json;charset=UTF-8
      produces:
        - application/hal+json
      parameters:
        - in: body
          name: body
          description: body
          required: true
          schema:
            $ref: '#/definitions/CreateCaseBody'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/CaseResource'
      security:
        - BasicAuth: []
  '/api/workflow/case/author/{id}':
    post:
      tags:
        - Workflow
      summary: Get all cases by user that created them
      operationId: findAllByAuthorUsingPOST
      consumes:
        - text/plain
      produces:
        - application/hal+json
      parameters:
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int64
        - in: body
          name: petriNet
          description: petriNet
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/CaseResource'
      security:
        - BasicAuth: []
  /api/workflow/case/count:
    post:
      tags:
        - Workflow
      summary: Get count of the cases
      operationId: countUsingPOST_1
      consumes:
        - application/json;charset=UTF-8
      produces:
        - application/json;charset=UTF-8
      parameters:
        - in: body
          name: searchBody
          description: searchBody
          required: true
          schema:
            $ref: '#/definitions/SingleCaseSearchRequestAsList'
        - name: operation
          in: query
          description: operation
          required: false
          type: string
          default: OR
          enum:
            - AND
            - OR
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/CountResponse'
      security:
        - BasicAuth: []
  '/api/workflow/case/reload/{id}':
    get:
      tags:
        - Workflow
      summary: Reload tasks of case
      description: Caller must have the ADMIN role
      operationId: reloadTasksUsingGET
      produces:
        - application/hal+json
      parameters:
        - name: id
          in: path
          description: id
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/MessageResource'
        '403':
          description: Caller doesn't fulfill the authorisation requirements
      security:
        - BasicAuth: []
  /api/workflow/case/search:
    post:
      tags:
        - Workflow
      summary: Generic case search on Elasticsearch database
      operationId: searchUsingPOST_3
      consumes:
        - application/json;charset=UTF-8
      produces:
        - application/hal+json
      parameters:
        - in: body
          name: searchBody
          description: searchBody
          required: true
          schema:
            $ref: '#/definitions/SingleCaseSearchRequestAsList'
        - name: operation
          in: query
          description: operation
          required: false
          type: string
          default: OR
          enum:
            - AND
            - OR
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/CaseResource'
      security:
        - BasicAuth: []
  /api/workflow/case/search2:
    post:
      tags:
        - Workflow
      summary: Generic case search with QueryDSL predicate
      operationId: search2UsingPOST
      consumes:
        - application/json;charset=UTF-8
      produces:
        - application/hal+json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/CaseResource'
      security:
        - BasicAuth: []
  /api/workflow/case/search_mongo:
    post:
      tags:
        - Workflow
      summary: Generic case search on Mongo database
      operationId: searchMongoUsingPOST
      consumes:
        - application/json;charset=UTF-8
      produces:
        - application/hal+json
      parameters:
        - in: body
          name: searchBody
          description: searchBody
          required: true
          schema:
            type: object
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/CaseResource'
      security:
        - BasicAuth: []
  '/api/workflow/case/{id}':
    get:
      tags:
        - Workflow
      summary: Get case by id
      operationId: getOneUsingGET_3
      produces:
        - application/hal+json
      parameters:
        - name: id
          in: path
          description: id
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/CaseResource'
      security:
        - BasicAuth: []
    delete:
      tags:
        - Workflow
      summary: Delete case
      operationId: deleteCaseUsingDELETE
      produces:
        - application/hal+json
      parameters:
        - name: id
          in: path
          description: id
          required: true
          type: string
        - name: deleteSubtree
          in: query
          description: deleteSubtree
          required: false
          type: boolean
          default: false
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/MessageResource'
      security:
        - BasicAuth: []
  '/api/workflow/case/{id}/data':
    get:
      tags:
        - Workflow
      summary: Get all case data
      operationId: getAllCaseDataUsingGET
      produces:
        - application/hal+json
      parameters:
        - name: id
          in: path
          description: id
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/DataFieldsResource'
      security:
        - BasicAuth: []
  '/api/workflow/case/{id}/file/{field}':
    get:
      tags:
        - Workflow
      summary: Download case file field value
      operationId: getFileUsingGET_1
      produces:
        - application/octet-stream
      parameters:
        - name: id
          in: path
          description: id
          required: true
          type: string
        - name: field
          in: path
          description: field
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Resource'
      security:
        - BasicAuth: []
  '/api/workflow/case/{id}/file/{field}/{name}':
    get:
      tags:
        - Workflow
      summary: Download one file from cases file list field value
      operationId: getFileByNameUsingGET
      produces:
        - application/octet-stream
      parameters:
        - name: id
          in: path
          description: id
          required: true
          type: string
        - name: field
          in: path
          description: field
          required: true
          type: string
        - name: name
          in: path
          description: name
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Resource'
      security:
        - BasicAuth: []
securityDefinitions:
  BasicAuth:
    type: basic
definitions:
  Author:
    type: object
    properties:
      email:
        type: string
      fullName:
        type: string
      id:
        type: integer
        format: int64
      name:
        type: string
    title: Author
  AuthoritiesResources:
    type: object
    properties:
      content:
        type: array
        items:
          $ref: '#/definitions/Authority'
      links:
        xml:
          name: link
          namespace: 'http://www.w3.org/2005/Atom'
          attribute: false
          wrapped: false
        $ref: '#/definitions/Link'
    title: AuthoritiesResources
  Authority:
    type: object
    properties:
      authority:
        type: string
      id:
        type: integer
        format: int64
    title: Authority
  CaseResource:
    type: object
    required:
      - petriNetObjectId
      - processIdentifier
      - title
    properties:
      _id:
        $ref: '#/definitions/ObjectId'
      author:
        $ref: '#/definitions/Author'
      color:
        type: string
      creationDate:
        type: string
        format: date-time
      icon:
        type: string
      immediateData:
        $ref: '#/definitions/Field'
      lastModified:
        type: string
        format: date-time
      links:
        xml:
          name: link
          namespace: 'http://www.w3.org/2005/Atom'
          attribute: false
          wrapped: false
        $ref: '#/definitions/Link'
      petriNetId:
        type: string
      petriNetObjectId:
        $ref: '#/definitions/ObjectId'
      processIdentifier:
        type: string
      stringId:
        type: string
      title:
        type: string
      visualId:
        type: string
    title: CaseResource
  CaseSearchRequest:
    type: object
    properties:
      author:
        $ref: '#/definitions/Author'
      fullText:
        type: string
      group:
        type: string
      petriNet:
        $ref: '#/definitions/PetriNet'
      processIdentifier:
        type: string
      query:
        type: string
      role:
        type: string
      stringId:
        type: string
      title:
        type: string
      transition:
        type: string
    title: CaseSearchRequest
  ChangePasswordRequest:
    type: object
    properties:
      login:
        type: string
      newPassword:
        type: string
      password:
        type: string
    title: ChangePasswordRequest
  ChangedFieldByFileFieldContainer:
    type: object
    properties:
      isSave:
        type: boolean
    title: ChangedFieldByFileFieldContainer
  ChangedFieldContainer:
    type: object
    title: ChangedFieldContainer
  Component:
    type: object
    properties:
      name:
        type: string
    title: Component
  CountResponse:
    type: object
    properties:
      count:
        type: integer
        format: int64
      entity:
        type: string
    title: CountResponse
  CreateCaseBody:
    type: object
    properties:
      color:
        type: string
      netId:
        type: string
      title:
        type: string
    title: CreateCaseBody
  CreateFilterBody:
    type: object
    properties:
      description:
        type: string
      query:
        type: string
      title:
        type: string
      type:
        type: string
      visibility:
        type: integer
        format: int32
    title: CreateFilterBody
  DataFieldReference:
    type: object
    properties:
      petriNetId:
        type: string
      stringId:
        type: string
      title:
        type: string
      transitionId:
        type: string
      type:
        type: string
    title: DataFieldReference
  DataFieldReferencesResource:
    type: object
    properties:
      content:
        type: array
        items:
          $ref: '#/definitions/DataFieldReference'
      links:
        xml:
          name: link
          namespace: 'http://www.w3.org/2005/Atom'
          attribute: false
          wrapped: false
        $ref: '#/definitions/Link'
    title: DataFieldReferencesResource
  DataFieldsResource:
    type: object
    properties:
      content:
        type: array
        items:
          $ref: '#/definitions/LocalisedField'
      links:
        xml:
          name: link
          namespace: 'http://www.w3.org/2005/Atom'
          attribute: false
          wrapped: false
        $ref: '#/definitions/Link'
    title: DataFieldsResource
  DataGroup:
    type: object
    properties:
      alignment:
        type: string
      fields:
        $ref: '#/definitions/DataFieldsResource'
      layout:
        $ref: '#/definitions/DataGroupLayout'
      stretch:
        type: boolean
      title:
        type: string
    title: DataGroup
  DataGroupLayout:
    type: object
    properties:
      cols:
        type: integer
        format: int32
      rows:
        type: integer
        format: int32
      type:
        type: string
    title: DataGroupLayout
  DataGroupsResource:
    type: object
    properties:
      content:
        type: array
        items:
          $ref: '#/definitions/DataGroup'
      links:
        xml:
          name: link
          namespace: 'http://www.w3.org/2005/Atom'
          attribute: false
          wrapped: false
        $ref: '#/definitions/Link'
    title: DataGroupsResource
  ElasticTaskSearchRequest:
    type: object
    properties:
      case:
        $ref: '#/definitions/TaskSearchCaseRequest'
      fullText:
        type: string
      group:
        type: string
      process:
        type: string
      query:
        type: string
      role:
        type: string
      title:
        type: string
      transitionId:
        type: string
      user:
        type: integer
        format: int64
    title: ElasticTaskSearchRequest
  Field:
    type: object
    properties:
      _id:
        $ref: '#/definitions/ObjectId'
      component:
        $ref: '#/definitions/Component'
      description:
        $ref: '#/definitions/I18nString'
      format:
        $ref: '#/definitions/Format'
      importId:
        type: string
      layout:
        $ref: '#/definitions/FieldLayout'
      length:
        type: integer
        format: int32
      name:
        $ref: '#/definitions/I18nString'
      order:
        type: integer
        format: int64
      placeholder:
        $ref: '#/definitions/I18nString'
      stringId:
        type: string
      type:
        type: string
        enum:
          - text
          - date
          - boolean
          - file
          - fileList
          - enumeration
          - enumeration_map
          - multichoice
          - multichoice_map
          - number
          - user
          - tabular
          - caseRef
          - dateTime
          - button
          - taskRef
      value:
        type: object
      view:
        $ref: '#/definitions/View'
    title: Field
  FieldLayout:
    type: object
    properties:
      alignment:
        type: string
      appearance:
        type: string
      cols:
        type: integer
        format: int32
      offset:
        type: integer
        format: int32
      rows:
        type: integer
        format: int32
      template:
        type: string
      x:
        type: integer
        format: int32
      'y':
        type: integer
        format: int32
    title: FieldLayout
  Format:
    type: object
    title: Format
  Group:
    type: object
    required:
      - name
    properties:
      childGroups:
        type: array
        items:
          $ref: '#/definitions/Group'
      id:
        type: integer
        format: int64
      members:
        type: array
        items:
          $ref: '#/definitions/Member'
      name:
        type: string
      parentGroup:
        $ref: '#/definitions/Group'
    title: Group
  GroupsResource:
    type: object
    properties:
      content:
        type: array
        items:
          $ref: '#/definitions/Group'
      links:
        xml:
          name: link
          namespace: 'http://www.w3.org/2005/Atom'
          attribute: false
          wrapped: false
        $ref: '#/definitions/Link'
    title: GroupsResource
  I18nString:
    type: object
    properties:
      defaultValue:
        type: string
      key:
        type: string
    title: I18nString
  Link:
    type: object
    properties:
      deprecation:
        type: string
        xml:
          name: deprecation
          attribute: true
          wrapped: false
      href:
        type: string
        xml:
          name: href
          attribute: true
          wrapped: false
      hreflang:
        type: string
        xml:
          name: hreflang
          attribute: true
          wrapped: false
      media:
        type: string
        xml:
          name: media
          attribute: true
          wrapped: false
      rel:
        type: string
        xml:
          name: rel
          attribute: true
          wrapped: false
      templated:
        type: boolean
      title:
        type: string
        xml:
          name: title
          attribute: true
          wrapped: false
      type:
        type: string
        xml:
          name: type
          attribute: true
          wrapped: false
    title: Link
  LocalisedEventOutcomeResource:
    type: object
    properties:
      assignee:
        $ref: '#/definitions/User'
      error:
        type: string
      finishDate:
        type: string
        format: date-time
      links:
        xml:
          name: link
          namespace: 'http://www.w3.org/2005/Atom'
          attribute: false
          wrapped: false
        $ref: '#/definitions/Link'
      startDate:
        type: string
        format: date-time
      success:
        type: string
    title: LocalisedEventOutcomeResource
  LocalisedField:
    type: object
    properties:
      component:
        $ref: '#/definitions/Component'
      description:
        type: string
      formatFilter:
        $ref: '#/definitions/Format'
      layout:
        $ref: '#/definitions/FieldLayout'
      length:
        type: integer
        format: int32
      name:
        type: string
      order:
        type: integer
        format: int64
      placeholder:
        type: string
      stringId:
        type: string
      type:
        type: string
        enum:
          - text
          - date
          - boolean
          - file
          - fileList
          - enumeration
          - enumeration_map
          - multichoice
          - multichoice_map
          - number
          - user
          - tabular
          - caseRef
          - dateTime
          - button
          - taskRef
      value:
        type: object
      view:
        $ref: '#/definitions/View'
    title: LocalisedField
  LocalisedFilterResource:
    type: object
    properties:
      author:
        $ref: '#/definitions/Author'
      created:
        type: string
        format: date-time
      description:
        type: string
      links:
        xml:
          name: link
          namespace: 'http://www.w3.org/2005/Atom'
          attribute: false
          wrapped: false
        $ref: '#/definitions/Link'
      mergeOperation:
        type: string
        enum:
          - AND
          - OR
      query:
        type: string
      stringId:
        type: string
      title:
        type: string
      type:
        type: string
      visibility:
        type: integer
        format: int32
    title: LocalisedFilterResource
  LocalisedTaskResource:
    type: object
    properties:
      assignPolicy:
        type: string
      assignTitle:
        type: string
      cancelTitle:
        type: string
      caseColor:
        type: string
      caseId:
        type: string
      caseTitle:
        type: string
      dataFocusPolicy:
        type: string
      delegateTitle:
        type: string
      finishDate:
        type: string
        format: date-time
      finishPolicy:
        type: string
      finishTitle:
        type: string
      finishedBy:
        type: integer
        format: int64
      icon:
        type: string
      immediateData:
        $ref: '#/definitions/Field'
      layout:
        $ref: '#/definitions/TaskLayout'
      links:
        xml:
          name: link
          namespace: 'http://www.w3.org/2005/Atom'
          attribute: false
          wrapped: false
        $ref: '#/definitions/Link'
      priority:
        type: integer
        format: int32
      requiredFilled:
        type: boolean
      startDate:
        type: string
        format: date-time
      stringId:
        type: string
      title:
        type: string
      transactionId:
        type: string
      transitionId:
        type: string
      user:
        $ref: '#/definitions/User'
    title: LocalisedTaskResource
  Member:
    type: object
    required:
      - email
      - name
      - surname
    properties:
      email:
        type: string
        minLength: 1
        maxLength: 2147483647
      groups:
        type: array
        items:
          $ref: '#/definitions/Group'
      id:
        type: integer
        format: int64
      name:
        type: string
        minLength: 1
        maxLength: 2147483647
      surname:
        type: string
        minLength: 1
        maxLength: 2147483647
      userId:
        type: integer
        format: int64
    title: Member
  MessageResource:
    type: object
    properties:
      data:
        type: string
      error:
        type: string
      links:
        xml:
          name: link
          namespace: 'http://www.w3.org/2005/Atom'
          attribute: false
          wrapped: false
        $ref: '#/definitions/Link'
      success:
        type: string
    title: MessageResource
  NewUserRequest:
    type: object
    properties:
      email:
        type: string
      groups:
        type: array
        items:
          type: integer
          format: int64
      processRoles:
        type: array
        items:
          type: string
    title: NewUserRequest
  ObjectId:
    type: object
    properties:
      counter:
        type: integer
        format: int32
      date:
        type: string
        format: date-time
      machineIdentifier:
        type: integer
        format: int32
      processIdentifier:
        type: integer
        format: int32
      time:
        type: integer
        format: int64
      timeSecond:
        type: integer
        format: int32
      timestamp:
        type: integer
        format: int32
    title: ObjectId
  PetriNet:
    type: object
    properties:
      identifier:
        type: string
    title: PetriNet
  PetriNetReference:
    type: object
    properties:
      author:
        $ref: '#/definitions/Author'
      createdDate:
        type: string
        format: date-time
      defaultCaseName:
        type: string
      icon:
        type: string
      identifier:
        type: string
      immediateData:
        $ref: '#/definitions/DataFieldReference'
      initials:
        type: string
      stringId:
        type: string
      title:
        type: string
      version:
        type: string
    title: PetriNetReference
  PetriNetReferenceResource:
    type: object
    properties:
      author:
        $ref: '#/definitions/Author'
      createdDate:
        type: string
        format: date-time
      defaultCaseName:
        type: string
      icon:
        type: string
      identifier:
        type: string
      immediateData:
        $ref: '#/definitions/DataFieldReference'
      initials:
        type: string
      links:
        xml:
          name: link
          namespace: 'http://www.w3.org/2005/Atom'
          attribute: false
          wrapped: false
        $ref: '#/definitions/Link'
      stringId:
        type: string
      title:
        type: string
      version:
        type: string
    title: PetriNetReferenceResource
  PetriNetReferenceResources:
    type: object
    properties:
      content:
        type: array
        items:
          $ref: '#/definitions/PetriNetReferenceResource'
      links:
        xml:
          name: link
          namespace: 'http://www.w3.org/2005/Atom'
          attribute: false
          wrapped: false
        $ref: '#/definitions/Link'
    title: PetriNetReferenceResources
  PetriNetReferenceWithMessageResource:
    type: object
    properties:
      data:
        type: string
      error:
        type: string
      links:
        xml:
          name: link
          namespace: 'http://www.w3.org/2005/Atom'
          attribute: false
          wrapped: false
        $ref: '#/definitions/Link'
      net:
        $ref: '#/definitions/PetriNetReference'
      success:
        type: string
    title: PetriNetReferenceWithMessageResource
  Preferences:
    type: object
    properties:
      locale:
        type: string
      userId:
        type: integer
        format: int64
    title: Preferences
  PreferencesResource:
    type: object
    properties:
      links:
        xml:
          name: link
          namespace: 'http://www.w3.org/2005/Atom'
          attribute: false
          wrapped: false
        $ref: '#/definitions/Link'
      locale:
        type: string
      userId:
        type: integer
        format: int64
    title: PreferencesResource
  ProcessRole:
    type: object
    properties:
      description:
        type: string
      importId:
        type: string
      name:
        type: string
      netImportId:
        type: string
      netStringId:
        type: string
      netVersion:
        type: string
      stringId:
        type: string
    title: ProcessRole
  ProcessRoleResource:
    type: object
    properties:
      description:
        type: string
      links:
        xml:
          name: link
          namespace: 'http://www.w3.org/2005/Atom'
          attribute: false
          wrapped: false
        $ref: '#/definitions/Link'
      name:
        type: string
      stringId:
        type: string
    title: ProcessRoleResource
  ProcessRolesResource:
    type: object
    properties:
      content:
        type: array
        items:
          $ref: '#/definitions/ProcessRoleResource'
      links:
        xml:
          name: link
          namespace: 'http://www.w3.org/2005/Atom'
          attribute: false
          wrapped: false
        $ref: '#/definitions/Link'
    title: ProcessRolesResource
  RegistrationRequest:
    type: object
    properties:
      name:
        type: string
      password:
        type: string
      surname:
        type: string
      token:
        type: string
    title: RegistrationRequest
  Resource:
    type: object
    properties:
      description:
        type: string
      filename:
        type: string
      open:
        type: boolean
      readable:
        type: boolean
    title: Resource
  SingleCaseSearchRequestAsList:
    type: object
    properties:
      list:
        $ref: '#/definitions/CaseSearchRequest'
    title: SingleCaseSearchRequestAsList
  SingleElasticTaskSearchRequestAsList:
    type: object
    properties:
      list:
        $ref: '#/definitions/ElasticTaskSearchRequest'
    title: SingleElasticTaskSearchRequestAsList
  SingleTaskSearchRequestAsList:
    type: object
    properties:
      list:
        $ref: '#/definitions/TaskSearchRequest'
    title: SingleTaskSearchRequestAsList
  TaskLayout:
    type: object
    properties:
      cols:
        type: integer
        format: int32
      fieldAlignment:
        type: string
      offset:
        type: integer
        format: int32
      rows:
        type: integer
        format: int32
      type:
        type: string
    title: TaskLayout
  TaskReference:
    type: object
    properties:
      stringId:
        type: string
      title:
        type: string
      transitionId:
        type: string
    title: TaskReference
  TaskSearchCaseRequest:
    type: object
    properties:
      id:
        type: string
      title:
        type: string
    title: TaskSearchCaseRequest
  TaskSearchRequest:
    type: object
    properties:
      case:
        $ref: '#/definitions/TaskSearchCaseRequest'
      fullText:
        type: string
      group:
        type: string
      process:
        type: string
      role:
        type: string
      title:
        type: string
      transitionId:
        type: string
      user:
        type: integer
        format: int64
    title: TaskSearchRequest
  TransactionResource:
    type: object
    properties:
      links:
        xml:
          name: link
          namespace: 'http://www.w3.org/2005/Atom'
          attribute: false
          wrapped: false
        $ref: '#/definitions/Link'
      title:
        type: string
      transitions:
        type: string
    title: TransactionResource
  TransactionsResource:
    type: object
    properties:
      content:
        type: array
        items:
          $ref: '#/definitions/TransactionResource'
      links:
        xml:
          name: link
          namespace: 'http://www.w3.org/2005/Atom'
          attribute: false
          wrapped: false
        $ref: '#/definitions/Link'
    title: TransactionsResource
  TransitionReference:
    type: object
    properties:
      immediateData:
        $ref: '#/definitions/DataFieldReference'
      petriNetId:
        type: string
      stringId:
        type: string
      title:
        type: string
    title: TransitionReference
  TransitionReferencesResource:
    type: object
    properties:
      content:
        type: array
        items:
          $ref: '#/definitions/TransitionReference'
      links:
        xml:
          name: link
          namespace: 'http://www.w3.org/2005/Atom'
          attribute: false
          wrapped: false
        $ref: '#/definitions/Link'
    title: TransitionReferencesResource
  UpdateUserRequest:
    type: object
    properties:
      avatar:
        type: string
      name:
        type: string
      surname:
        type: string
      telNumber:
        type: string
    title: UpdateUserRequest
  User:
    type: object
    properties:
      authorities:
        type: array
        items:
          $ref: '#/definitions/Authority'
      avatar:
        type: string
      email:
        type: string
      fullName:
        type: string
      groups:
        type: array
        items:
          $ref: '#/definitions/Group'
      id:
        type: integer
        format: int64
      name:
        type: string
      nextGroups:
        type: array
        items:
          type: string
      processRoles:
        type: array
        items:
          $ref: '#/definitions/ProcessRole'
      surname:
        type: string
      telNumber:
        type: string
    title: User
  UserResource:
    type: object
    properties:
      authorities:
        type: array
        items:
          $ref: '#/definitions/Authority'
      avatar:
        type: string
      email:
        type: string
      fullName:
        type: string
      groups:
        type: array
        items:
          $ref: '#/definitions/Group'
      id:
        type: integer
        format: int64
      links:
        xml:
          name: link
          namespace: 'http://www.w3.org/2005/Atom'
          attribute: false
          wrapped: false
        $ref: '#/definitions/Link'
      name:
        type: string
      nextGroups:
        type: array
        items:
          type: string
      processRoles:
        type: array
        items:
          $ref: '#/definitions/ProcessRole'
      surname:
        type: string
      telNumber:
        type: string
    title: UserResource
  UserSearchRequestBody:
    type: object
    properties:
      fulltext:
        type: string
      roles:
        type: string
    title: UserSearchRequestBody
  View:
    type: object
    properties:
      value:
        type: string
    title: View
